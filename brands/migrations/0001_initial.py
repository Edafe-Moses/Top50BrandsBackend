# Generated by Django 5.0.1 on 2025-07-19 02:25

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BrandCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007751', help_text='Hex color code', max_length=7)),
                ('icon', models.CharField(blank=True, help_text='Icon class name', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Brand Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_title', models.CharField(blank=True, help_text='SEO title', max_length=200)),
                ('meta_description', models.TextField(blank=True, help_text='SEO description', max_length=300)),
                ('meta_keywords', models.CharField(blank=True, help_text='SEO keywords', max_length=500)),
                ('is_published', models.BooleanField(default=True)),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('shares_count', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(help_text='Brand name', max_length=200)),
                ('subtitle', models.CharField(blank=True, help_text='Brand tagline or subtitle', max_length=300)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField(help_text='Short description')),
                ('full_description', models.TextField(help_text='Detailed description')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brands/logos/')),
                ('image', models.ImageField(blank=True, null=True, upload_to='brands/images/')),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to='brands/banners/')),
                ('current_rank', models.PositiveIntegerField(help_text='Current ranking position (1-50)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('previous_rank', models.PositiveIntegerField(blank=True, help_text='Previous year ranking position', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('brand_value', models.CharField(help_text='Brand value (e.g., ₦4.2T)', max_length=20)),
                ('market_cap', models.CharField(blank=True, help_text='Market capitalization', max_length=20)),
                ('revenue', models.CharField(blank=True, help_text='Annual revenue', max_length=20)),
                ('growth_rate', models.CharField(help_text='Growth rate (e.g., +12.5%)', max_length=10)),
                ('founded_year', models.CharField(blank=True, help_text='Year founded', max_length=4)),
                ('ceo', models.CharField(blank=True, help_text='CEO name', max_length=200)),
                ('employees', models.CharField(blank=True, help_text='Number of employees', max_length=50)),
                ('brand_recognition', models.PositiveIntegerField(default=0, help_text='Brand recognition percentage (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('customer_rating', models.DecimalField(decimal_places=2, default=0.0, help_text='Customer rating (0.0-5.0)', max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('is_featured', models.BooleanField(default=False, help_text='Featured brand')),
                ('is_new_entry', models.BooleanField(default=False, help_text='New entry this year')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.category')),
                ('headquarters', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.location')),
                ('industry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.industry')),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'ordering': ['current_rank'],
            },
        ),
        migrations.CreateModel(
            name='BrandAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='Achievement title', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Achievement description')),
                ('year', models.CharField(blank=True, help_text='Year received', max_length=4)),
                ('organization', models.CharField(blank=True, help_text='Awarding organization', max_length=200)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='brands.brand')),
            ],
            options={
                'ordering': ['brand', 'order', '-year'],
            },
        ),
        migrations.CreateModel(
            name='BrandStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('monthly_views', models.PositiveIntegerField(default=0)),
                ('weekly_views', models.PositiveIntegerField(default=0)),
                ('daily_views', models.PositiveIntegerField(default=0)),
                ('total_likes', models.PositiveIntegerField(default=0)),
                ('total_shares', models.PositiveIntegerField(default=0)),
                ('engagement_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Engagement rate percentage', max_digits=5)),
                ('brand', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='brands.brand')),
            ],
            options={
                'verbose_name_plural': 'Brand Stats',
            },
        ),
        migrations.CreateModel(
            name='BrandTimeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.CharField(help_text='Event year', max_length=4)),
                ('event', models.CharField(help_text='Event description', max_length=300)),
                ('description', models.TextField(blank=True, help_text='Detailed description')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline', to='brands.brand')),
            ],
            options={
                'ordering': ['brand', 'year', 'order'],
            },
        ),
        migrations.CreateModel(
            name='BrandMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('label', models.CharField(help_text="Metric label (e.g., 'Total Assets')", max_length=100)),
                ('value', models.CharField(help_text="Metric value (e.g., '₦9.2T')", max_length=50)),
                ('change', models.CharField(blank=True, help_text="Change percentage (e.g., '+15%')", max_length=20)),
                ('trend', models.CharField(choices=[('up', 'Up'), ('down', 'Down'), ('stable', 'Stable')], default='stable', max_length=10)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='brands.brand')),
            ],
            options={
                'ordering': ['brand', 'order', 'label'],
                'unique_together': {('brand', 'label')},
            },
        ),
        migrations.CreateModel(
            name='BrandRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.PositiveIntegerField(help_text='Ranking year')),
                ('rank', models.PositiveIntegerField(help_text='Ranking position', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('brand_value', models.CharField(help_text='Brand value for that year', max_length=20)),
                ('growth_rate', models.CharField(blank=True, help_text='Growth rate', max_length=10)),
                ('notes', models.TextField(blank=True, help_text='Additional notes')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rankings', to='brands.brand')),
            ],
            options={
                'ordering': ['-year', 'rank'],
                'unique_together': {('brand', 'year')},
            },
        ),
    ]
