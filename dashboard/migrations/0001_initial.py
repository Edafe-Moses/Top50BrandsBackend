# Generated by Django 5.0.1 on 2025-07-19 02:50

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(help_text='Configuration key', max_length=100, unique=True)),
                ('value', models.TextField(help_text='Configuration value (JSON format)')),
                ('description', models.TextField(blank=True, help_text='Description of this configuration')),
                ('is_active', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=False, help_text='Can be accessed via public API')),
                ('requires_admin', models.BooleanField(default=True, help_text='Requires admin access to modify')),
            ],
            options={
                'verbose_name': 'System Configuration',
                'verbose_name_plural': 'System Configurations',
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='DataMigrationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('migration_type', models.CharField(choices=[('brand_copy', 'Brand Copy'), ('brand_update', 'Brand Update'), ('new_year_setup', 'New Year Setup'), ('data_cleanup', 'Data Cleanup')], max_length=20)),
                ('from_year', models.PositiveIntegerField(blank=True, null=True)),
                ('to_year', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('description', models.TextField(help_text='Description of the migration')),
                ('items_processed', models.PositiveIntegerField(default=0)),
                ('items_total', models.PositiveIntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('initiated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initiated_migrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Data Migration Log',
                'verbose_name_plural': 'Data Migration Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='YearlyRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.PositiveIntegerField(help_text='Ranking year', unique=True, validators=[django.core.validators.MinValueValidator(2020), django.core.validators.MaxValueValidator(2050)])),
                ('title', models.CharField(help_text="Title for this year's ranking", max_length=200)),
                ('description', models.TextField(blank=True, help_text="Description of this year's ranking")),
                ('is_active', models.BooleanField(default=False, help_text='Is this the current active year?')),
                ('is_published', models.BooleanField(default=False, help_text="Is this year's ranking published?")),
                ('is_complete', models.BooleanField(default=False, help_text='Is data collection complete for this year?')),
                ('total_brands', models.PositiveIntegerField(default=50, help_text="Total number of brands in this year's ranking")),
                ('research_methodology', models.TextField(blank=True, help_text='Research methodology used for this year')),
                ('data_collection_start', models.DateField(blank=True, null=True)),
                ('data_collection_end', models.DateField(blank=True, null=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('research_lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_rankings', to=settings.AUTH_USER_MODEL)),
                ('team_members', models.ManyToManyField(blank=True, related_name='ranking_teams', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Yearly Ranking',
                'verbose_name_plural': 'Yearly Rankings',
                'ordering': ['-year'],
            },
        ),
        migrations.CreateModel(
            name='DashboardUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('editor', 'Editor'), ('researcher', 'Researcher'), ('viewer', 'Viewer')], default='viewer', max_length=20)),
                ('can_create_years', models.BooleanField(default=False)),
                ('can_edit_brands', models.BooleanField(default=False)),
                ('can_publish_content', models.BooleanField(default=False)),
                ('can_manage_users', models.BooleanField(default=False)),
                ('last_login_dashboard', models.DateTimeField(blank=True, null=True)),
                ('login_count', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_profile', to=settings.AUTH_USER_MODEL)),
                ('assigned_years', models.ManyToManyField(blank=True, help_text='Years this user can manage', to='dashboard.yearlyranking')),
            ],
            options={
                'verbose_name': 'Dashboard User',
                'verbose_name_plural': 'Dashboard Users',
            },
        ),
    ]
